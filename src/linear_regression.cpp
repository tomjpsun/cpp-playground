#include <iostream>
using namespace std;

// linear_regression() : given x array, y array, array size n, than we calculate
//   regression formula : y = x * (coef) + (interception)
// input: x, y, n
// output: coef, interception

void linear_regression(float* coef, float* interception, int n, float* x, float* y)
{
	float a, b, sumX=0, sumX2=0, sumY=0, sumXY=0;

	/* Calculating Required Sum */
	for(int i=0; i<n; i++)
	{
		sumX = sumX + x[i];
		sumX2 = sumX2 + x[i]*x[i];
		sumY = sumY + y[i];
		sumXY = sumXY + x[i]*y[i];
	}
	/* Calculating coef and interception */
	a = (n*sumXY-sumX*sumY)/(n*sumX2-sumX*sumX);
	b = (sumY - a*sumX)/n;
	/* Displaying value */
	cout << "y = " << a << "x + " << b << endl;
	*coef = a;
	*interception = b;
	//printf("\nEquation of best fit is: y =  %0.2fx + %0.2f\n", a, b);
}

// 10 Tags, each has 63 records of 'Temperature Under Test'
float tempUT[10][63] =
{
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-4.6,-5.6,-3.8,-3.0,-2.2,-2.0,-2.5,0.2,-0.4,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,17.4,16.2,18.4,19.4,20.4,21.4,23.4,22.3,24.4,25.3,27.4,26.6,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.0,-3.8,-2.5,-2.0,-2.2,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-11.5,-12.3,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.5,-2.0,-2.2,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,16.2,15.4,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.2,-2.5,-2.0,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.5,-2.2,-2.0,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.0,-2.5,-2.2,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.0,-2.5,-2.2,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.5,-2.2,-2.0,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-3.0,-2.2,-2.5,-2.0,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,27.4,26.6,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1},
	{-20.0,-18.7,-17.2,-16.4,-15.5,-14.5,-13.9,-12.3,-11.5,-10.6,-9.8,-8.3,-7.6,-6.6,-5.6,-4.6,-3.8,-2.5,-2.2,-2.0,-3.0,-0.4,0.2,1.5,2.4,3.4,4.5,5.3,6.4,7.4,8.3,9.4,10.0,11.3,12.6,13.4,14.4,15.4,16.2,17.4,18.4,19.4,20.4,21.4,22.3,23.4,24.4,25.3,26.6,27.4,28.4,29.4,30.4,31.3,32.4,33.4,34.5,35.4,36.5,37.4,38.5,39.4,40.1}
};

// 10 tags, each has 63 records of 'Current ADC'
float curADC[10][63]=
{
	{1061.3333333333333,1064.3333333333333,1074.6666666666667,1075.0,1085.6666666666667,1085.6666666666667,1087.6666666666667,1097.0,1101.6666666666667,1105.6666666666667,1110.0,1115.3333333333333,1120.3333333333333,1124.0,1130.3333333333333,1129.0,1135.3333333333333,1143.6666666666667,1139.0,1145.6666666666667,1144.0,1152.3333333333333,1155.0,1160.0,1168.3333333333333,1170.6666666666667,1175.0,1181.0,1184.3333333333333,1187.0,1192.0,1194.6666666666667,1200.3333333333333,1206.3333333333333,1212.0,1217.3333333333333,1221.3333333333333,1224.3333333333333,1233.0,1230.0,1238.6666666666667,1245.0,1248.6666666666667,1253.3333333333333,1264.6666666666667,1259.6666666666667,1270.0,1273.6666666666667,1278.6666666666667,1280.0,1286.3333333333333,1292.0,1296.3333333333333,1302.0,1303.3333333333333,1311.3333333333333,1315.3333333333333,1320.3333333333333,1325.3333333333333,1328.3333333333333,1334.6666666666667,1339.0,1343.3333333333333},
	{1217.0,1224.3333333333333,1227.3333333333333,1232.3333333333333,1236.0,1238.0,1242.0,1248.3333333333333,1251.3333333333333,1255.6666666666667,1260.0,1266.3333333333333,1269.6666666666667,1274.0,1278.0,1281.6666666666667,1289.3333333333333,1286.0,1291.0,1290.6666666666667,1291.3333333333333,1299.3333333333333,1301.3333333333333,1308.0,1311.6666666666667,1316.3333333333333,1322.0,1325.3333333333333,1329.0,1334.0,1337.3333333333333,1341.3333333333333,1343.6666666666667,1348.6666666666667,1355.3333333333333,1358.3333333333333,1363.3333333333333,1366.0,1370.6666666666667,1376.666666666667,1380.0,1384.333333333333,1389.0,1393.333333333333,1396.666666666667,1401.333333333333,1408.0,1410.333333333333,1415.666666666667,1418.333333333333,1423.0,1428.0,1432.666666666667,1436.0,1441.333333333333,1446.333333333333,1452.0,1456.666666666667,1458.666666666667,1462.333333333333,1467.666666666667,1473.0,1476.666666666667,},
	{},
	{1132.3333333333333,1139.6666666666667,1143.6666666666667,1145.6666666666667,1148.6666666666667,1151.6666666666667,1157.0,1161.6666666666667,1165.3333333333333,1169.6666666666667,1174.6666666666667,1178.0,1183.0,1185.6666666666667,1189.3333333333333,1193.6666666666667,1196.3333333333333,1201.3333333333333,1202.6666666666667,1201.0,1203.0,1211.6666666666667,1214.0,1220.3333333333333,1223.6666666666667,1227.3333333333333,1231.6666666666667,1235.0,1240.0,1243.3333333333333,1248.3333333333333,1252.3333333333333,1253.6666666666667,1261.0,1263.6666666666667,1268.6666666666667,1272.3333333333333,1277.3333333333333,1281.0,1286.0,1291.0,1296.0,1301.0,1302.6666666666667,1309.3333333333333,1314.3333333333333,1317.3333333333333,1320.6666666666667,1327.0,1330.3333333333333,1336.6666666666667,1341.0,1344.6666666666667,1349.6666666666667,1354.3333333333333,1359.0,1366.3333333333333,1368.0,1374.0,1377.0,1381.666666666667,1385.333333333333,1388.333333333333},
	{1131.6666666666667,1136.6666666666667,1143.3333333333333,1146.0,1150.6666666666667,1155.3333333333333,1158.3333333333333,1165.6666666666667,1169.0,1171.3333333333333,1176.0,1181.3333333333333,1184.6666666666667,1190.6666666666667,1193.3333333333333,1198.0,1201.3333333333333,1207.3333333333333,1207.6666666666667,1207.6666666666667,1209.3333333333333,1218.3333333333333,1220.0,1225.0,1229.0,1234.0,1238.6666666666667,1242.6666666666667,1247.3333333333333,1250.6666666666667,1256.3333333333333,1259.0,1264.6666666666667,1270.6666666666667,1277.3333333333333,1281.0,1286.0,1290.3333333333333,1294.0,1297.6666666666667,1302.6666666666667,1309.3333333333333,1312.3333333333333,1317.0,1321.6666666666667,1326.6666666666667,1330.3333333333333,1334.6666666666667,1340.3333333333333,1344.3333333333333,1349.0,1354.3333333333333,1357.0,1363.0,1367.6666666666667,1372.6666666666667,1376.666666666667,1382.0,1387.0,1388.666666666667,1394.666666666667,1399.333333333333,1402.666666666667},
	{1095.3333333333333,1102.6666666666667,1108.0,1111.0,1114.6666666666667,1118.6666666666667,1121.0,1126.3333333333333,1132.3333333333333,1135.3333333333333,1139.6666666666667,1147.3333333333333,1148.3333333333333,1153.3333333333333,1157.3333333333333,1162.6666666666667,1166.0,1169.6666666666667,1172.3333333333333,1172.6666666666667,1173.0,1181.6666666666667,1183.6666666666667,1189.6666666666667,1194.0,1198.3333333333333,1202.3333333333333,1207.0,1212.3333333333333,1216.0,1221.0,1226.3333333333333,1228.6666666666667,1235.0,1240.3333333333333,1242.3333333333333,1247.6666666666667,1251.0,1255.6666666666667,1261.0,1264.6666666666667,1271.3333333333333,1274.6666666666667,1279.3333333333333,1284.3333333333333,1289.3333333333333,1295.0,1299.0,1303.0,1307.6666666666667,1313.3333333333333,1318.6666666666667,1321.6666666666667,1327.3333333333333,1332.3333333333333,1336.0,1342.3333333333333,1346.3333333333333,1352.3333333333333,1354.3333333333333,1362.6666666666667,1366.0,1368.0},
	{1088.0,1092.3333333333333,1097.3333333333333,1101.0,1106.3333333333333,1110.0,1110.0,1117.0,1121.6666666666667,1124.3333333333333,1127.0,1133.6666666666667,1135.6666666666667,1141.0,1143.0,1149.0,1151.6666666666667,1155.3333333333333,1155.6666666666667,1157.3333333333333,1157.3333333333333,1165.3333333333333,1166.6666666666667,1172.3333333333333,1176.0,1180.3333333333333,1185.3333333333333,1188.3333333333333,1191.6666666666667,1197.0,1200.6666666666667,1205.0,1208.3333333333333,1213.3333333333333,1218.3333333333333,1222.0,1226.0,1228.3333333333333,1231.6666666666667,1237.0,1241.6666666666667,1245.6666666666667,1251.0,1253.6666666666667,1258.3333333333333,1262.3333333333333,1266.6666666666667,1272.0,1277.3333333333333,1279.6666666666667,1282.6666666666667,1289.6666666666667,1293.0,1296.3333333333333,1302.0,1306.0,1311.0,1314.6666666666667,1320.3333333333333,1323.3333333333333,1328.0,1331.0,1336.0},
	{1145.0,1151.0,1157.3333333333333,1161.0,1166.3333333333333,1169.6666666666667,1171.6666666666667,1178.6666666666667,1184.6666666666667,1189.3333333333333,1193.0,1198.3333333333333,1202.3333333333333,1205.6666666666667,1209.6666666666667,1213.6666666666667,1216.6666666666667,1224.0,1224.3333333333333,1225.6666666666667,1226.3333333333333,1235.3333333333333,1237.6666666666667,1243.6666666666667,1247.6666666666667,1251.3333333333333,1254.6666666666667,1260.3333333333333,1265.6666666666667,1271.0,1274.6666666666667,1278.3333333333333,1282.3333333333333,1289.0,1294.6666666666667,1298.0,1304.0,1308.3333333333333,1313.0,1317.3333333333333,1322.0,1328.6666666666667,1332.0,1335.6666666666667,1340.6666666666667,1347.6666666666667,1351.6666666666667,1356.3333333333333,1361.3333333333333,1365.0,1370.0,1376.0,1379.333333333333,1384.333333333333,1391.0,1394.0,1400.666666666667,1403.0,1408.666666666667,1412.666666666667,1417.666666666667,1422.333333333333,1426.666666666667},
	{1065.3333333333333,1070.0,1077.6666666666667,1081.0,1086.0,1091.3333333333333,1094.6666666666667,1102.3333333333333,1103.0,1111.0,1115.3333333333333,1120.0,1124.6666666666667,1130.6666666666667,1135.0,1138.6666666666667,1145.3333333333333,1150.3333333333333,1150.6666666666667,1151.6666666666667,1152.6666666666667,1162.6666666666667,1164.0,1171.0,1173.3333333333333,1182.3333333333333,1187.0,1190.6666666666667,1195.6666666666667,1200.3333333333333,1206.0,1209.3333333333333,1213.3333333333333,1219.3333333333333,1227.0,1231.0,1235.0,1239.3333333333333,1245.0,1249.0,1255.3333333333333,1260.0,1265.0,1270.6666666666667,1275.0,1280.3333333333333,1286.0,1290.6666666666667,1301.3333333333333,1299.0,1305.0,1311.0,1316.6666666666667,1321.3333333333333,1327.0,1332.6666666666667,1337.0,1341.6666666666667,1347.3333333333333,1350.3333333333333,1358.6666666666667,1362.6666666666667,1366.6666666666667},
	{1119.0,1124.0,1130.0,1131.6666666666667,1137.0,1140.6666666666667,1144.0,1150.3333333333333,1153.3333333333333,1155.6666666666667,1162.6666666666667,1167.0,1169.0,1173.0,1177.3333333333333,1180.6666666666667,1185.3333333333333,1190.6666666666667,1191.6666666666667,1191.6666666666667,1193.0,1202.6666666666667,1203.3333333333333,1205.6666666666667,1210.3333333333333,1215.0,1219.0,1225.0,1229.0,1231.3333333333333,1235.3333333333333,1238.6666666666667,1243.0,1247.0,1252.3333333333333,1255.3333333333333,1261.0,1264.6666666666667,1270.0,1271.0,1277.0,1283.0,1288.3333333333333,1292.3333333333333,1294.0,1298.6666666666667,1300.6666666666667,1306.0,1312.3333333333333,1314.0,1318.6666666666667,1324.0,1327.6666666666667,1333.0,1337.6666666666667,1339.3333333333333,1348.0,1349.6666666666667,1356.6666666666667,1359.0,1363.3333333333333,1366.6666666666667,1369.6666666666667}
};

void linear_regression_test()
{
	float coef, interception;
	for (int i=0; i<10; i++) {
		linear_regression(&coef, &interception, 63, curADC[i], tempUT[i]);
	}
}
